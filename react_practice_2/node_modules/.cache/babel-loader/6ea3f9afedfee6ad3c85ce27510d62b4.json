{"ast":null,"code":"var _jsxFileName = \"/Users/lesliewilson/code_mentorship/react_practice_2/src/containers/Display.js\";\nimport React from \"react\";\n\nconst Display = props => {\n  let oInfo = [{\n    information: \"o(1) is the best order of o to have because no matter how large your data is your function never slows down, called constant time\"\n  }, {\n    information: \"o(n^2) is the worst order to have, quadratic time slows down quickly as you move through the function, searching through a serach, order of magnitude increases exponentially as your data size increases \"\n  }];\n  let information = oInfo.map(info => {\n    return React.createElement(Os, {\n      information: Os.information,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    });\n  });\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"HI!\"), information);\n};\n\nexport default Display;","map":{"version":3,"sources":["/Users/lesliewilson/code_mentorship/react_practice_2/src/containers/Display.js"],"names":["React","Display","props","oInfo","information","map","info","Os"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAEC,KAAD,IAAS;AAErB,MAAIC,KAAK,GAAG,CACV;AAACC,IAAAA,WAAW,EAAC;AAAb,GADU,EAEV;AAACA,IAAAA,WAAW,EAAE;AAAd,GAFU,CAAZ;AAKA,MAAIA,WAAW,GAAGD,KAAK,CAACE,GAAN,CAAUC,IAAI,IAAG;AACjC,WACE,oBAAC,EAAD;AACA,MAAA,WAAW,EAAIC,EAAE,CAACH,WADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAKD,GANiB,CAAlB;AAQA,SACE,0CACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADA,EAEAA,WAFA,CADF;AAOD,CAtBD;;AAwBA,eAAeH,OAAf","sourcesContent":["import React from \"react\"\n\nconst Display=(props)=>{\n\n  let oInfo = [\n    {information:\"o(1) is the best order of o to have because no matter how large your data is your function never slows down, called constant time\"},\n    {information: \"o(n^2) is the worst order to have, quadratic time slows down quickly as you move through the function, searching through a serach, order of magnitude increases exponentially as your data size increases \"}\n  ]\n\n  let information = oInfo.map(info =>{\n    return(\n      <Os\n      information = {Os.information}\n      />\n    )\n  })\n\n  return(\n    <>\n    <h1>HI!</h1>\n   {information}\n    </>\n\n  )\n}\n\nexport default Display\n"]},"metadata":{},"sourceType":"module"}